{"version":3,"file":"static/js/581.b1e268e2.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/Information/Information.module.css?1ccb","components/Information/Information.jsx","webpack://react-homework-template/./src/components/MovieDetails/MovieDetails.module.css?9ca9","components/MovieDetails/MovieDetails.jsx","pages/MovieDetailsPage/MovieDetailsPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"info_cont\":\"Information_info_cont__Thewo\",\"info_list\":\"Information_info_list__Ynftz\"};","import css from './Information.module.css';\nconst { Link } = require('react-router-dom');\n\nconst Information = ({ state }) => {\n  return (\n    <div className={css.info_cont}>\n      <h3>Additional information</h3>\n      <ul className={css.info_list}>\n        <li>\n          <Link to=\"cast\" state={state}>\n            Cast\n          </Link>\n        </li>\n        <li>\n          <Link to=\"reviews\" state={state}>\n            Review\n          </Link>\n        </li>\n      </ul>\n    </div>\n  );\n};\n\nexport default Information;\n","// extracted by mini-css-extract-plugin\nexport default {\"movie_details_container\":\"MovieDetails_movie_details_container__OJysT\"};","import css from './MovieDetails.module.css';\n\nconst MovieDetails = ({ movie }) => {\n  const {\n    original_title,\n    overview,\n    poster_path,\n    vote_average,\n    genres = [],\n  } = movie;\n\n  return (\n    <div className={css.movie_details_container}>\n      {poster_path && (\n        <img\n          width=\"250px\"\n          src={`https://image.tmdb.org/t/p/w342${poster_path}`}\n          alt=\"original_title\"\n        />\n      )}\n      <div>\n        <h2>{original_title}</h2>\n        <p>User score: {vote_average}</p>\n        <h3>Overview</h3>\n        <p>{overview}</p>\n        <h3>Genre</h3>\n        <ul>\n          {genres.map(genre => (\n            <li key={genre.id}>{genre.name}</li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default MovieDetails;\n","import { getMovieDeteilsApi } from 'api/movies';\nimport Information from 'components/Information/Information';\nimport MovieDetails from 'components/MovieDetails/MovieDetails';\nimport { useEffect, useState } from 'react';\nimport { Outlet, useLocation, useNavigate, useParams } from 'react-router-dom';\n\nconst MovieDetailsPage = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  useEffect(() => {\n    const getMovieDeteils = async () => {\n      try {\n        setIsLoading(true);\n        const data = await getMovieDeteilsApi(movieId);\n        setMovie(data);\n      } catch (error) {\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    getMovieDeteils();\n  }, [movieId]);\n\n  const handleBack = () => {\n    navigate(location.state ?? '/movies');\n  };\n\n  return (\n    <>\n      <button type=\"button\" onClick={handleBack}>\n        Go back\n      </button>\n      {isLoading ? <p>Loading</p> : <MovieDetails movie={movie} />}\n      <Information state={location.state} />\n      <Outlet />\n    </>\n  );\n};\n\nexport default MovieDetailsPage;\n"],"names":["Link","require","_ref","state","_jsxs","className","css","children","_jsx","to","movie","original_title","overview","poster_path","vote_average","_movie$genres","genres","width","src","concat","alt","map","genre","name","id","movieId","useParams","_useState","useState","_useState2","_slicedToArray","setMovie","_useState3","_useState4","isLoading","setIsLoading","navigate","useNavigate","location","useLocation","useEffect","getMovieDeteils","_asyncToGenerator","_regeneratorRuntime","_callee","data","_context","prev","next","getMovieDeteilsApi","sent","t0","finish","stop","apply","arguments","_Fragment","type","onClick","_location$state","MovieDetails","Information","Outlet"],"sourceRoot":""}